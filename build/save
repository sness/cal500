------------------------------ parse_cal500_to_yml.rb ------------------------------

    pp n
    puts "artist_id=#{artist_id}"
    puts "song_id=#{song_id}"
    puts "tag_id=#{tag_id}"

    puts "artist=#{artists[artist_id]}"
    puts "song=#{songs[song_id]}"
    puts "tag=#{tags[tag_id]}"


------------------------------ parse_cal500_to_yml.rb ------------------------------

** Tue May 12 2009 - 13:38:26 PM
   -----------------------------

I decided this was all too complex, and making just an "AudioFile" that contains an
artist_name and a song_name

#!/usr/bin/ruby

require 'pp'

if ARGV[0] == nil
  abort("Usage: parse_cal500_ground_truth.rb cal500_ground_truth.txt stacked_binary.txt")
else
  ground_truth_file = File.open(ARGV[0],"r")
  predict_file = File.open(ARGV[1],"r")
end

#
# Get the data from the ground
#
ground_truth = []
begin
  ground_truth_file.each_line do |line|
    a = line.split
    b = { :audio_file => a[0], :tag => a[1]}
    ground_truth << b
  end
rescue EOFError
  ground_truth_file.close
end

#
# Generate lists of artists, songs and tags
#
gt_audio_files = []
gt_tags = []
ground_truth.each do |n|
  gt_audio_files << n[:audio_file]
  gt_tags << n[:tag]
end

#
# Get the data from the prediction
#
predict = []
begin
  predict_file.each_line do |line|
    a = line.split
    b = { :audio_file => a[0], :tag => a[1]}
    ground_truth << b
  end
rescue EOFError
  predict_file.close
end

#
# Generate lists of artists, songs and tags
#
pred_audio_files = []
pred_tags = []
ground_truth.each do |n|
  pred_audio_files << n[:audio_file]
  pred_tags << n[:tag]
end

#
# Merge both the ground truth and predictions into
#
audio_files = (gt_audio_files + pred_audio_files).sort.uniq
tags = (gt_tags + pred_tags).sort.uniq

#
# Convert the artists and songs into prettier versions
#
pretty_artists = artists.collect do |n|
  n.gsub("_"," ").split(" ").collect! {|n| n.capitalize }.join(" ")
end

pretty_songs = songs.collect do |n|
  n.gsub("_"," ").split(" ").collect! {|n| n.capitalize }.join(" ")
end

#
# Output the artists.yml file
#
File.open("audio_file.yml","w") do |f|
  f.puts "---"
  audio_files.each_index do |i|
    artist = i.split(
    f.puts "- !ruby/object:AudioFile"
    f.puts "  attributes: "
    f.puts "    id: #{i+1}"
    f.puts "    artist: #{artists[i]}"
    f.puts "    song: #{artists[i]}"
    f.puts "    filename: #{}"
  end
end

#
# Output the songs.yml file
#
File.open("songs.yml","w") do |f|
  f.puts "---"
  pretty_songs.each_index do |i|
    f.puts "- !ruby/object:Song"
    f.puts "  attributes: "
    f.puts "    id: #{i+1}"
    f.puts "    name: #{songs[i]}"
  end
end

#
# Output the mp3s.yml file
#


#
# Output the tags.yml file
#
File.open("tags.yml","w") do |f|
  f.puts "---"
  tags.each_index do |i|
    f.puts "- !ruby/object:Tag"
    f.puts "  attributes: "
    f.puts "    id: #{i+1}"
    f.puts "    name: #{tags[i]}"
  end
end

#
# Output the predictions.yml file
#
File.open("predictions.yml","w") do |f|
  f.puts "---"
  f.puts "- !ruby/object:Prediction"
  f.puts "  attributes: "
  f.puts "    id: 1"
  f.puts "    name: Ground Truth"
  f.puts "    params: "
  f.puts "- !ruby/object:Prediction"
  f.puts "  attributes: "
  f.puts "    id: 2"
  f.puts "    name: Stacked Annotation"
  f.puts "    params: "
end

#
# Output the song_tags.yml file
#
File.open("song_tags.yml","w") do |f|
  f.puts "---"
  i = 0
  ground_truth.each do |n|
    artist_id = artists.index(n[:artist])
    song_id = songs.index(n[:song])
    tag_id = tags.index(n[:tag])
    f.puts "- !ruby/object:SongTag"
    f.puts "  attributes: "
    f.puts "    id: #{i+1}"
    f.puts "    artist_id: #{artist_id + 1}"
    f.puts "    song_id: #{song_id + 1}"
    f.puts "    tag_id: #{tag_id + 1}"
    f.puts "    prediction_id: 1"
    i += 1
  end
  predict.each do |n|
    artist_id = artists.index(n[:artist])
    song_id = songs.index(n[:song])
    tag_id = tags.index(n[:tag])
    f.puts "- !ruby/object:SongTag"
    f.puts "  attributes: "
    f.puts "    id: #{i+1}"
    f.puts "    artist_id: #{artist_id + 1}"
    f.puts "    song_id: #{song_id + 1}"
    f.puts "    tag_id: #{tag_id + 1}"
    f.puts "    prediction_id: 2"
    i += 1
  end
end


------------------------------ parse_cal500_to_yml.rb ------------------------------

** Tue May 12 2009 - 15:24:58 PM
   -----------------------------

#
# Convert the artists and songs into prettier versions
#
# pretty_artists = artists.collect do |n|
#   n.gsub("_"," ").split(" ").collect! {|n| n.capitalize }.join(" ")
# end


